{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "v1.28",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "fields": [
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 8",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Universal Controller URL",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Universal Controller URL",
            "name": "base_url_uac",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "f350bdbf05fd4c2282c80857dffca0e7"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 2",
            "fieldType": "Credential",
            "fieldValue": "UAC_REST_CRED",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Universal Controller Credentials",
            "name": "rest_credentials_uac",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "157a31809dfa45ac87cbd55678e867c4"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Working Directory",
            "name": "work_dir",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 11,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "1dd7f305d44c498691585e27a40c585c"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 4",
            "fieldType": "Text",
            "fieldValue": ",",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Input File Separator",
            "name": "input_sep",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 14,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "80d0a9b9dc34430798afee4e8a4bc3a7"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Script Field 1",
            "fieldType": "Script",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Input File Script",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Input File",
            "name": "input_script",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 15,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "d5b26c7d04fd4f7b96158166942d9461"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "ashost",
                    "fieldValueLabel": "Application Server Connection",
                    "sequence": 0,
                    "sysId": "561a8ff06fa2415ea6ddf4db700f8c73",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "dest",
                    "fieldValueLabel": "SAPNWRFC.INI Connection",
                    "sequence": 1,
                    "sysId": "28fe592daf4244bebae4b7fc16f89a2a",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 2",
            "fieldType": "Choice",
            "fieldValue": "ashost",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Connection Type",
            "name": "connection_type",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 16,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "09c257894d6740979c6db8e416d48116"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 1",
            "fieldType": "Credential",
            "fieldValue": "SAP_CRED",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Credentials",
            "name": "sap_cred",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 17,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "98d7ccdc3b1a4a348f6a8cd0ef30ffa3"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 5",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Ashost",
            "name": "sap_ashost",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 18,
            "showIfField": "Choice Field 2",
            "showIfFieldValue": "ashost",
            "sysId": "f1642ce8558540d7810b4fc7fc6e7bbe"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 6",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Client",
            "name": "sap_client",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 19,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "45c030bd29414c8e8ea5f7284d6286b2"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 9",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Sysnr",
            "name": "sap_sysnr",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 20,
            "showIfField": "Choice Field 2",
            "showIfFieldValue": "ashost",
            "sysId": "f85f73829ff244f49616a6818f285269"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "SAP Dest",
            "name": "sap_dest",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 21,
            "showIfField": "Choice Field 2",
            "showIfFieldValue": "dest",
            "sysId": "1c7d1ace355342e681164a18e525cf68"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "DEBUG",
                    "sequence": 0,
                    "sysId": "5e799d57eaa6453ea4938c69b4e7d782",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "INFO",
                    "sequence": 1,
                    "sysId": "35fb1c155a0b4f55845389ed850a11cc",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "WARNING",
                    "sequence": 2,
                    "sysId": "ffa0b717044b4964b77f9884fb2efcbe",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "CRITICAL",
                    "sequence": 3,
                    "sysId": "c764f54492ac44cc970c95bc98b73384",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "ERROR",
                    "sequence": 4,
                    "sysId": "b4238f9679a54e89b16eb7593ecceabe",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldType": "Choice",
            "fieldValue": "DEBUG",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "DEBUG, INFO, WARNING, ERROR, CRITICAL log levels of Task",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Loglevel",
            "name": "loglevel",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 22,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "5462f622e04544bb82a93a0a1497e88c"
        }
    ],
    "name": "SAP-ECC-Extract-Job-Definitions",
    "outputFailureOnly": false,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "OUTERR",
    "outputType": "STDOUT",
    "runtimeDir": null,
    "script": null,
    "scriptTypeWindows": "uapy",
    "scriptUnix": "#!/opt/universal/python3.6/bin/python3\n#         Origins: Stonebranch\n#          Author: Abdullah Saglam\n#          Date: 26-10-2020\n#\n#    Requires Universal Agent for Linux/Windows\n#\n#    Copyright (c) Stonebranch, 2020.  All rights reserved.\n#\n#    Purpose: the script creates for each line of the file sap_all_jobs.txt\n#             one USAP definition file.\n#\n#\n#    Version History:\n#    1.0     ASA     26-10-2020      Created\n#    1.1     ASA     26-10-2020      bugfix\n#    1.2     ASA     27-10-2020      input file separator variable added\n#    1.3     ASA     30-10-2020      bugfix windows path\n#    1.4     ASA     30-10-2020      bugfix windows path\n#    1.5     ASA     30-10-2020      http response message enrichment\n#    1.6     ASA     30-10-2020      http request message debug\n#    1.7     ASA     30-10-2020      bugfix\n#    1.8     ASA     02-11-2020      usap generate job definition\n#    1.9     ASA     02-11-2020      changes\n#    1.10    ASA     02-11-2020      changes\n#    1.11    ASA     02-11-2020      changes\n#    1.12    ASA     02-11-2020      changes\n#    1.13    ASA     02-11-2020      changes\n#    1.14    ASA     02-11-2020      changes\n#    1.15    ASA     02-11-2020      changes\n#    1.16    ASA     03-11-2020      changes\n#    1.17    ASA     03-11-2020      connection types ashost, dest\n#    1.18    NBU     03-11-2020      sapnwrfc.ini\n#    1.19    NBU     05-11-2020      jobdev_ prefix removed\n#    1.20    ASA     05-11-2020      change for non-existent job definition\n#    1.21    ASA     05-11-2020      change for non-existent job definition\n#    1.22    ASA     05-11-2020      change for non-existent job definition\n#    1.23    ASA     05-11-2020      change for non-existent job definition\n#    1.24    ASA     11-11-2020      bugfix\n#    1.25    NBU     12-11-2020      Space in SAP JOB fix\n#    1.26    NBU     12-11-2020      Space in SAP JOB fix\n#    1.27    NBU     17-11-2020      bugfix\n#    1.28    NBU     17-11-2020      bugfix\n#\n\nimport logging\nimport requests\nimport os\nimport sys\nimport re\nimport datetime\nimport logging\nimport subprocess\n\ngl_version = \"1.28\"\ngl_variable_prefix = \"var\"\ngl_connection_type = '${ops_var_connection_type}'\n\ngl_base_url_uac = \"${ops_var_base_url_uac}\".rstrip(\" /\")\ngl_auth_uac = (\"${_credentialUser('${ops_var_rest_credentials_uac}')}\", \"${_credentialPwd('${ops_var_rest_credentials_uac}')}\")\ngl_time_now = datetime.datetime.now()\ngl_date_today = str(gl_time_now.strftime(\"%d%m%Y.%H%M%S\"))\ngl_num_success_job_def = 0\ngl_num_failed_job_def = 0\ngl_input_file_full_path = r\"${_scriptPath('${ops_var_input_script}')} \".strip()\ngl_input_file_full_sep = r\"${ops_var_input_sep}\"\ngl_log_directory = os.path.join(\"${ops_var_work_dir} \".strip(), \"log\")\ngl_jobdef_directory = os.path.join(r\"${ops_var_work_dir} \".strip(), \"jobdef\")\ngl_caldef_directory = os.path.join(r\"${ops_var_work_dir} \".strip(), \"caldef\")\ngl_log_file_full_path = os.path.join(gl_log_directory, f\"create_sap_usap_files.{gl_date_today}.log\")\ngl_output_file_path = os.path.join(gl_jobdef_directory, str(gl_time_now.strftime(\"%d%m%Y_%H%M%S\") + \"_convout\"))\ngl_task_name = \"${ops_var_launch_task}\"\ngl_sap_ashost = \"${ops_var_sap_ashost}\"\ngl_sap_dest = \"${ops_var_sap_dest}\"\ngl_sap_client = \"${ops_var_sap_client}\"\ngl_sap_sysnr = \"${ops_var_sap_sysnr}\"\ngl_sap_user = '${_credentialUser(\"${ops_var_sap_cred}\")}'\ngl_sap_pwd = '${_credentialPwd(\"${ops_var_sap_cred}\")}'\n\n# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL\nlogging.basicConfig(level=\"${ops_var_loglevel}\",\n                    format=' %(asctime)s - %(levelname)s - %(message)s')\n\n\n# -- Main Logic Function\ndef main():\n    \"\"\"calls the required functions to run the stored procedures\"\"\"\n    print_variables()\n    create_usap_files()\n\n\ndef print_variables():\n    logging.info(\"Python version <<< \" + sys.version + \" >>>\")\n    logging.info(\"Executing task version \" + gl_version + \" with the following \"\n                                                          \"parameters\")\n    logging.info(f\"Logfile path: {gl_log_file_full_path}\")\n    print_defined_variables(gl_variable_prefix)\n\n\ndef print_defined_variables(variable_prefix):\n    all_variables = r\"${_scope}\"\n    separate_variables = [variable for variable in all_variables.split(', ') if\n                          \"ops_\" + variable_prefix in variable]\n    logging.info(str(separate_variables).replace(\", \", \",\\n\"))\n\n\ndef create_directory_structure(directory_path):\n    try:\n        if not os.path.exists(directory_path):\n            os.mkdir(directory_path)\n            logging.info(\"Created the directory %s \" % directory_path)\n        else:\n            logging.debug(\"The directory %s already there, will not be re-created\" % directory_path)\n    except OSError as e:\n        logging.error(\"Creation of the directory %s failed: %s\" % (directory_path, e))\n\n\ndef launch_task(task_name, sap_name, sap_name_ws, sap_id):\n    url = '%s/resources/task/ops-task-launch' % gl_base_url_uac\n    logging.debug('URL: %s' % url)\n    local_headers = {'content-type': 'application/json'}\n\n    data_str = '{\"variables\": [{\"name\": \"jobname\", \"value\": \"%s\"}, ' \\\n               '{\"name\": \"jobnamews\", \"value\": \"%s\"}, ' \\\n               '{\"name\": \"jobid\", \"value\": \"%s\"}], \"name\": \"%s\"}' \\\n               % (sap_name, sap_name_ws, sap_id, task_name)\n    logging.debug('DATA: %s' % data_str)\n\n    response = requests.post(url, headers=local_headers, data=data_str, auth=gl_auth_uac, stream=True)\n\n    if 200 != response.status_code:\n        logging.error('Response: %s' % response)\n        exit(1)\n    else:\n        logging.info('Response 200 received')\n        logging.info('Response: %s' % response)\n\n\ndef generate_job_definition(job_name, job_id):\n    escaped_job_name = job_name.replace(\"\\\"\", r\"\\\"\")\n    if gl_connection_type == \"ashost\":\n        logging.debug(\"Using ASHOST connection to SAP\")\n        cmd_usap = f\"usap -ashost {gl_sap_ashost} -client {gl_sap_client} \" \\\n                   f\"-sysnr {gl_sap_sysnr} \" \\\n                   f\"-userid {gl_sap_user} -pwd {gl_sap_pwd} \" \\\n                   \"-generate jobdef -jobname \" + '\"' + f\"{escaped_job_name}\" + '\"' + f\" -jobid {job_id}\"\n        logging.debug(cmd_usap)\n    elif gl_connection_type == \"dest\":\n        logging.debug(\"Using nwrfc.ini destination connection to SAP\")\n        cmd_usap = f\"usap -dest {gl_sap_dest} -client {gl_sap_client} \" \\\n                   f\"-userid {gl_sap_user} -pwd {gl_sap_pwd} \" \\\n                   \"-generate jobdef -jobname \" + '\"' + f\"{escaped_job_name}\" + '\"' + f\" -jobid {job_id}\"\n    else:\n        logging.error(\"Wrong connection type, exiting\")\n        exit(1)\n    try:\n        process_output = subprocess.check_output(cmd_usap, shell=True)\n    except subprocess.CalledProcessError as e:\n        logging.error(e.output)\n        logging.error(\"Error Code: \" + str(e.returncode))\n        return False\n        # exit(1)\n    formatted_output = process_output.decode(encoding='utf-8', errors='ignore')\n    logging.debug(\"########## output start ##########\")\n    logging.debug(formatted_output)\n    logging.debug(\"########## output end ##########\")\n    job_name_normalized = re.sub(r'[/:*?<>|\"\\\\ ]', \"_\", job_name)\n    gl_output_file_full_path = os.path.join(gl_output_file_path,\n                                            f\"{job_name_normalized}_ID#{job_id}.txt\")\n    logging.info(f\"Writing into file {gl_output_file_full_path}\")\n    try:\n        with open(gl_output_file_full_path, 'w') as output_file:\n            output_file.write(formatted_output)\n            output_file.close()\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n    return True\n\n\ndef create_usap_files():\n    global gl_num_success_job_def\n    global gl_num_failed_job_def\n    create_directory_structure(gl_log_directory)\n    create_directory_structure(gl_jobdef_directory)\n    create_directory_structure(gl_output_file_path)\n    try:\n        with open(gl_input_file_full_path, 'r') as input_file, open(gl_log_file_full_path, 'w') as log_file:\n            failed_job_def_msg = \"\"\n            log_file.writelines(\"### Processing start: %s\\n\" % gl_date_today)\n            log_file.writelines(\"### The following SAP Job definitions have been extracted:\\n\")\n            for line in input_file:\n                logging.debug(\"LINE:<\" + str(line) + \">\")\n                if not line.strip() or line.strip() is \"\\n\":\n                    logging.debug(\"NEWLINE\")\n                    continue\n                try:\n                    sap_name, sap_id = line.rstrip().split(\n                        gl_input_file_full_sep, 1)\n                except ValueError:\n                    gl_num_failed_job_def += 1\n                    info_string = line.rstrip()\n                    failed_job_def_msg += info_string + \" could NOT be parsed\\n\"\n                    logging.error(info_string + \" could NOT be parsed\")\n                    continue\n                # continue\n                # sap_name and sap_id not empty!!!!\n                # sap_name_ws = re.sub(r'[/:*?<>|\"\\\\ ]', \"_\", sap_name)\n                info_string = f\"{sap_name},{sap_id}\"\n                logging.info(info_string)\n                # launch_task(gl_task_name, sap_name, sap_name_ws, sap_id)\n                if generate_job_definition(sap_name, sap_id):\n                    gl_num_success_job_def += 1\n                    log_file.writelines(info_string + \"\\n\")\n                    pass\n                else:\n                    gl_num_failed_job_def += 1\n                    failed_job_def_msg += info_string + \" could NOT be extracted\\n\"\n                    logging.error(info_string + \" could NOT be extracted\")\n                    pass\n            log_file.writelines(f\"### {gl_num_success_job_def} Job definitions have been extracted\\n\")\n            if gl_num_failed_job_def:\n                log_file.writelines(f\"### {gl_num_failed_job_def} Job definitions could NOT be processed\\n\")\n                log_file.writelines(f\"{failed_job_def_msg}\")\n            log_file.writelines(\"### Processing done: %s\\n\" % gl_date_today)\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n    try:\n        logging.info(\"### REPORT\")\n        with open(gl_log_file_full_path, 'r') as log_file:\n            for line in log_file:\n                logging.info(str(line))\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n\n\nif __name__ == '__main__':\n    main()",
    "scriptWindows": "#!/opt/universal/python3.6/bin/python3\n#         Origins: Stonebranch\n#          Author: Abdullah Saglam\n#          Date: 26-10-2020\n#\n#    Requires Universal Agent for Linux/Windows\n#\n#    Copyright (c) Stonebranch, 2020.  All rights reserved.\n#\n#    Purpose: the script creates for each line of the file sap_all_jobs.txt\n#             one USAP definition file.\n#\n#\n#    Version History:\n#    1.0     ASA     26-10-2020      Created\n#    1.1     ASA     26-10-2020      bugfix\n#    1.2     ASA     27-10-2020      input file separator variable added\n#    1.3     ASA     30-10-2020      bugfix windows path\n#    1.4     ASA     30-10-2020      bugfix windows path\n#    1.5     ASA     30-10-2020      http response message enrichment\n#    1.6     ASA     30-10-2020      http request message debug\n#    1.7     ASA     30-10-2020      bugfix\n#    1.8     ASA     02-11-2020      usap generate job definition\n#    1.9     ASA     02-11-2020      changes\n#    1.10    ASA     02-11-2020      changes\n#    1.11    ASA     02-11-2020      changes\n#    1.12    ASA     02-11-2020      changes\n#    1.13    ASA     02-11-2020      changes\n#    1.14    ASA     02-11-2020      changes\n#    1.15    ASA     02-11-2020      changes\n#    1.16    ASA     03-11-2020      changes\n#    1.17    ASA     03-11-2020      connection types ashost, dest\n#    1.18    NBU     03-11-2020      sapnwrfc.ini\n#    1.19    NBU     05-11-2020      jobdev_ prefix removed\n#    1.20    ASA     05-11-2020      change for non-existent job definition\n#    1.21    ASA     05-11-2020      change for non-existent job definition\n#    1.22    ASA     05-11-2020      change for non-existent job definition\n#    1.23    ASA     05-11-2020      change for non-existent job definition\n#    1.24    ASA     11-11-2020      bugfix\n#    1.25    NBU     12-11-2020      Space in SAP JOB fix\n#    1.26    NBU     12-11-2020      Space in SAP JOB fix\n#    1.27    NBU     17-11-2020      bugfix\n#    1.28    NBU     17-11-2020      bugfix\n#\n\nimport logging\nimport requests\nimport os\nimport sys\nimport re\nimport datetime\nimport logging\nimport subprocess\n\ngl_version = \"1.28\"\ngl_variable_prefix = \"var\"\ngl_connection_type = '${ops_var_connection_type}'\n\ngl_base_url_uac = \"${ops_var_base_url_uac}\".rstrip(\" /\")\ngl_auth_uac = (\"${_credentialUser('${ops_var_rest_credentials_uac}')}\", \"${_credentialPwd('${ops_var_rest_credentials_uac}')}\")\ngl_time_now = datetime.datetime.now()\ngl_date_today = str(gl_time_now.strftime(\"%d%m%Y.%H%M%S\"))\ngl_num_success_job_def = 0\ngl_num_failed_job_def = 0\ngl_input_file_full_path = r\"${_scriptPath('${ops_var_input_script}')} \".strip()\ngl_input_file_full_sep = r\"${ops_var_input_sep}\"\ngl_log_directory = os.path.join(\"${ops_var_work_dir} \".strip(), \"log\")\ngl_jobdef_directory = os.path.join(r\"${ops_var_work_dir} \".strip(), \"jobdef\")\ngl_caldef_directory = os.path.join(r\"${ops_var_work_dir} \".strip(), \"caldef\")\ngl_log_file_full_path = os.path.join(gl_log_directory, f\"create_sap_usap_files.{gl_date_today}.log\")\ngl_output_file_path = os.path.join(gl_jobdef_directory, str(gl_time_now.strftime(\"%d%m%Y_%H%M%S\") + \"_convout\"))\ngl_task_name = \"${ops_var_launch_task}\"\ngl_sap_ashost = \"${ops_var_sap_ashost}\"\ngl_sap_dest = \"${ops_var_sap_dest}\"\ngl_sap_client = \"${ops_var_sap_client}\"\ngl_sap_sysnr = \"${ops_var_sap_sysnr}\"\ngl_sap_user = '${_credentialUser(\"${ops_var_sap_cred}\")}'\ngl_sap_pwd = '${_credentialPwd(\"${ops_var_sap_cred}\")}'\n\n# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL\nlogging.basicConfig(level=\"${ops_var_loglevel}\",\n                    format=' %(asctime)s - %(levelname)s - %(message)s')\n\n\n# -- Main Logic Function\ndef main():\n    \"\"\"calls the required functions to run the stored procedures\"\"\"\n    print_variables()\n    create_usap_files()\n\n\ndef print_variables():\n    logging.info(\"Python version <<< \" + sys.version + \" >>>\")\n    logging.info(\"Executing task version \" + gl_version + \" with the following \"\n                                                          \"parameters\")\n    logging.info(f\"Logfile path: {gl_log_file_full_path}\")\n    print_defined_variables(gl_variable_prefix)\n\n\ndef print_defined_variables(variable_prefix):\n    all_variables = r\"${_scope}\"\n    separate_variables = [variable for variable in all_variables.split(', ') if\n                          \"ops_\" + variable_prefix in variable]\n    logging.info(str(separate_variables).replace(\", \", \",\\n\"))\n\n\ndef create_directory_structure(directory_path):\n    try:\n        if not os.path.exists(directory_path):\n            os.mkdir(directory_path)\n            logging.info(\"Created the directory %s \" % directory_path)\n        else:\n            logging.debug(\"The directory %s already there, will not be re-created\" % directory_path)\n    except OSError as e:\n        logging.error(\"Creation of the directory %s failed: %s\" % (directory_path, e))\n\n\ndef launch_task(task_name, sap_name, sap_name_ws, sap_id):\n    url = '%s/resources/task/ops-task-launch' % gl_base_url_uac\n    logging.debug('URL: %s' % url)\n    local_headers = {'content-type': 'application/json'}\n\n    data_str = '{\"variables\": [{\"name\": \"jobname\", \"value\": \"%s\"}, ' \\\n               '{\"name\": \"jobnamews\", \"value\": \"%s\"}, ' \\\n               '{\"name\": \"jobid\", \"value\": \"%s\"}], \"name\": \"%s\"}' \\\n               % (sap_name, sap_name_ws, sap_id, task_name)\n    logging.debug('DATA: %s' % data_str)\n\n    response = requests.post(url, headers=local_headers, data=data_str, auth=gl_auth_uac, stream=True)\n\n    if 200 != response.status_code:\n        logging.error('Response: %s' % response)\n        exit(1)\n    else:\n        logging.info('Response 200 received')\n        logging.info('Response: %s' % response)\n\n\ndef generate_job_definition(job_name, job_id):\n    escaped_job_name = job_name.replace(\"\\\"\", r\"\\\"\")\n    if gl_connection_type == \"ashost\":\n        logging.debug(\"Using ASHOST connection to SAP\")\n        cmd_usap = f\"usap -ashost {gl_sap_ashost} -client {gl_sap_client} \" \\\n                   f\"-sysnr {gl_sap_sysnr} \" \\\n                   f\"-userid {gl_sap_user} -pwd {gl_sap_pwd} \" \\\n                   \"-generate jobdef -jobname \" + '\"' + f\"{escaped_job_name}\" + '\"' + f\" -jobid {job_id}\"\n        logging.debug(cmd_usap)\n    elif gl_connection_type == \"dest\":\n        logging.debug(\"Using nwrfc.ini destination connection to SAP\")\n        cmd_usap = f\"usap -dest {gl_sap_dest} -client {gl_sap_client} \" \\\n                   f\"-userid {gl_sap_user} -pwd {gl_sap_pwd} \" \\\n                   \"-generate jobdef -jobname \" + '\"' + f\"{escaped_job_name}\" + '\"' + f\" -jobid {job_id}\"\n    else:\n        logging.error(\"Wrong connection type, exiting\")\n        exit(1)\n    try:\n        process_output = subprocess.check_output(cmd_usap, shell=True)\n    except subprocess.CalledProcessError as e:\n        logging.error(e.output)\n        logging.error(\"Error Code: \" + str(e.returncode))\n        return False\n        # exit(1)\n    formatted_output = process_output.decode(encoding='utf-8', errors='ignore')\n    logging.debug(\"########## output start ##########\")\n    logging.debug(formatted_output)\n    logging.debug(\"########## output end ##########\")\n    job_name_normalized = re.sub(r'[/:*?<>|\"\\\\ ]', \"_\", job_name)\n    gl_output_file_full_path = os.path.join(gl_output_file_path,\n                                            f\"{job_name_normalized}_ID#{job_id}.txt\")\n    logging.info(f\"Writing into file {gl_output_file_full_path}\")\n    try:\n        with open(gl_output_file_full_path, 'w') as output_file:\n            output_file.write(formatted_output)\n            output_file.close()\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n    return True\n\n\ndef create_usap_files():\n    global gl_num_success_job_def\n    global gl_num_failed_job_def\n    create_directory_structure(gl_log_directory)\n    create_directory_structure(gl_jobdef_directory)\n    create_directory_structure(gl_output_file_path)\n    try:\n        with open(gl_input_file_full_path, 'r') as input_file, open(gl_log_file_full_path, 'w') as log_file:\n            failed_job_def_msg = \"\"\n            log_file.writelines(\"### Processing start: %s\\n\" % gl_date_today)\n            log_file.writelines(\"### The following SAP Job definitions have been extracted:\\n\")\n            for line in input_file:\n                logging.debug(\"LINE:<\" + str(line) + \">\")\n                if not line.strip() or line.strip() is \"\\n\":\n                    logging.debug(\"NEWLINE\")\n                    continue\n                try:\n                    sap_name, sap_id = line.rstrip().split(\n                        gl_input_file_full_sep, 1)\n                except ValueError:\n                    gl_num_failed_job_def += 1\n                    info_string = line.rstrip()\n                    failed_job_def_msg += info_string + \" could NOT be parsed\\n\"\n                    logging.error(info_string + \" could NOT be parsed\")\n                    continue\n                # continue\n                # sap_name and sap_id not empty!!!!\n                # sap_name_ws = re.sub(r'[/:*?<>|\"\\\\ ]', \"_\", sap_name)\n                info_string = f\"{sap_name},{sap_id}\"\n                logging.info(info_string)\n                # launch_task(gl_task_name, sap_name, sap_name_ws, sap_id)\n                if generate_job_definition(sap_name, sap_id):\n                    gl_num_success_job_def += 1\n                    log_file.writelines(info_string + \"\\n\")\n                    pass\n                else:\n                    gl_num_failed_job_def += 1\n                    failed_job_def_msg += info_string + \" could NOT be extracted\\n\"\n                    logging.error(info_string + \" could NOT be extracted\")\n                    pass\n            log_file.writelines(f\"### {gl_num_success_job_def} Job definitions have been extracted\\n\")\n            if gl_num_failed_job_def:\n                log_file.writelines(f\"### {gl_num_failed_job_def} Job definitions could NOT be processed\\n\")\n                log_file.writelines(f\"{failed_job_def_msg}\")\n            log_file.writelines(\"### Processing done: %s\\n\" % gl_date_today)\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n    try:\n        logging.info(\"### REPORT\")\n        with open(gl_log_file_full_path, 'r') as log_file:\n            for line in log_file:\n                logging.info(str(line))\n    except IOError as exception:\n        logging.error('Operation failed: %s' % exception)\n        exit(1)\n\n\nif __name__ == '__main__':\n    main()",
    "sysId": "716dcfacc68746b8959ad96c68d3fe03",
    "useCommonScript": false,
    "variablePrefix": "var",
    "waitForOutput": false
}